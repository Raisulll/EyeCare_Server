INSERT INTO TRANSACTION (
  TRANSACTION_DATE,
  TRANSACTION_AMOUNT,
  PATIENT_ID,
  DOCTOR_ID
) VALUES(
  (SELECT APPOINTMENT_DATE FROM APPOINTMENT WHERE APPOINTMENT_ID = 26),
  (SELECT DOCTOR_PAYMENT FROM DOCTOR WHERE DOCTOR_ID = (SELECT DOCTOR_ID FROM APPOINTMENT WHERE APPOINTMENT_ID = 26)),
  (SELECT PATIENT_ID FROM APPOINTMENT WHERE APPOINTMENT_ID = 26),
  (SELECT DOCTOR_ID FROM APPOINTMENT WHERE APPOINTMENT_ID = 26)
);

SELECT
  DOCTOR_ID
FROM
  APPOINTMENT
WHERE
  APPOINTMENT_ID = 26;

SELECT
  *
FROM
  APPOINTMENT;

ALTER TABLE TRANSACTION RENAME COLUMN DOCTTOR_ID TO DOCTOR_ID;

SELECT
  *
FROM
  TRANSACTION;

SELECT
  *
FROM
  DOCTOR;

ALTER TABLE TRANSACTION
  ADD TRANSACTION_FOR VARCHAR(
    255
  ) DEFAULT 'Doctors fee' NOT NULL;

ALTER TABLE TRANSACTION DROP column TRANSACTION_FOR;

SELECT
  *
FROM
  TRANSACTION;


alter table TRANSACTION
  add  PAYMENT_TO VARCHAR(255) DEFAULT 'Doctors/Shop' NOT NULL;


alter table DOCTOR 
drop column HOSPITAL_ID;

alter table APPOINTMENT
add HOSPITAL_ID NUMBER DEFAULT 3 NOT NULL;


SELECT
  *
FROM
  APPOINTMENT;

ALTER TABLE PRESCRIPTION DROP COLUMN SURGERY;

alter table PRESCRIPTION add SURGERY VARCHAR(255) DEFAULT 'No';

ALTER TABLE APPOINTMENT
  ADD PRESCRIPTION_ID NUMBER;

UPDATE APPOINTMENT
SET
  APPOINTMENT_STATUS='Completed', PRESCRIPTION_ID= (SELECT PRESCRIPTION_ID FROM PRESCRIPTION WHERE APPOINTMENT_ID=26)
WHERE
  APPOINTMENT_ID=26;


  SELECT
  *
FROM
  HOSPITAL;


  alter table doctor add HOSPITAL_ID NUMBER DEFAULT 3 NOT NULL;

  DROP TABLE PRODUCT;

  DROP TABLE INVENTORY;

  DROP TABLE ORDERS;

  DROP TABLE DELIVERY;

  DROP TABLE PAYMENT;

  COMMIT;

  create table INVENTORY(
    SHOP_ID NUMBER NOT NULL,
    PRODUCT_ID NUMBER NOT NULL,
    PRODUCT_QUANTITY NUMBER NOT NULL,
    CONSTRAINT INVENTORY_PK PRIMARY KEY (SHOP_ID, PRODUCT_ID),
    CONSTRAINT INVENTORY_FK1 FOREIGN KEY (SHOP_ID) REFERENCES SHOP(SHOP_ID),
    CONSTRAINT INVENTORY_FK2 FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(PRODUCT_ID)
  );

  create table PRODUCT (
    PRODUCT_ID NUMBER GENERATED BY DEFAULT AS IDENTITY,
    PRODUCT_NAME VARCHAR(255) NOT NULL,
    PRODUCT_PRICE NUMBER NOT NULL,
    PRODUCT_DESCRIPTION VARCHAR(255) NOT NULL,
    PRODUCT_IMAGE VARCHAR(255) NOT NULL,
    CONSTRAINT PRODUCT_PK PRIMARY KEY (PRODUCT_ID)
  );

  ALTER TABLE SUPPLY DROP COLUMN PRODUCT_IMAGE;

  alter table SUPPLY add PRODUCT_IMAGE VARCHAR(255) DEFAULT 'E:\React Sikhbo\DBMS_Project\client\src\Assets\images\glass.png' NOT NULL;

  SELECT
  *
FROM
  SHOP;

  ALTER TABLE INVENTORY DROP COLUMN PRODUCT_QUANTITY;

  DROP TABLE PRODUCT;

  DROP TABLE INVENTORY;

CREATE TABLE INVENTORY(
  SHOP_ID NUMBER NOT NULL,
  PRODUCT_ID NUMBER NOT NULL,
  CONSTRAINT INVENTORY_PK PRIMARY KEY (SHOP_ID, PRODUCT_ID),
  CONSTRAINT INVENTORY_FK1 FOREIGN KEY (SHOP_ID) REFERENCES SHOP(SHOP_ID),
  CONSTRAINT INVENTORY_FK2 FOREIGN KEY (PRODUCT_ID) REFERENCES SUPPLY(PRODUCT_ID)
);

CREATE TABLE SUPPLY (
  PRODUCT_ID NUMBER GENERATED BY DEFAULT AS IDENTITY,
  PRODUCT_NAME VARCHAR(255) NOT NULL,
  PRODUCT_PRICE NUMBER NOT NULL,
  PRODUCT_DESCRIPTION VARCHAR(255) NOT NULL,
  PRODUCT_IMAGE VARCHAR(255) NOT NULL,
  CONSTRAINT PRODUCT_PK PRIMARY KEY (PRODUCT_ID)
);

alter table INVENTORY add QUANTITY NUMBER DEFAULT 0 NOT NULL;


SELECT
  PRODUCT_NAME,
  PRODUCT_DESCRIPTION,
  PRODUCT_PRICE,
  QUANTITY
FROM
  SUPPLY    S,
  INVENTORY I
WHERE
  S.PRODUCT_ID = I.PRODUCT_ID;

  SELECT * FROM INVENTORY;


  CREATE TABLE CART(
  PATIENT_ID NUMBER NOT NULL,
  PRODUCT_ID NUMBER NOT NULL,
  SHOP_ID NUMBER NOT NULL,
  CONSTRAINT CART_PK PRIMARY KEY (PATIENT_ID, PRODUCT_ID, SHOP_ID),
  CONSTRAINT CART_FK1 FOREIGN KEY (PATIENT_ID) REFERENCES PATIENT(PATIENT_ID),
  CONSTRAINT CART_FK2 FOREIGN KEY (PRODUCT_ID) REFERENCES SUPPLY(PRODUCT_ID),
  CONSTRAINT CART_FK3 FOREIGN KEY (SHOP_ID) REFERENCES SHOP(SHOP_ID)
);

SELECT
  *
FROM
  CART;


  ALTER TABLE CART ADD CART_QUANTITY NUMBER DEFAULT 0 NOT NULL;

  CREATE TABLE ORDERS(
  ORDER_ID NUMBER,
  PATIENT_ID NUMBER NOT NULL,
  PRODUCT_ID NUMBER NOT NULL,
  SHOP_ID NUMBER NOT NULL,
  ORDER_DATE DATE DEFAULT SYSDATE NOT NULL,
  ORDER_QUANTITY NUMBER NOT NULL,
  ORDER_STATUS VARCHAR(255) DEFAULT 'Confirmed' NOT NULL,
  CONSTRAINT ORDERS_PK PRIMARY KEY (ORDER_ID),
  CONSTRAINT ORDERS_FK1 FOREIGN KEY (PATIENT_ID) REFERENCES PATIENT(PATIENT_ID),
  CONSTRAINT ORDERS_FK2 FOREIGN KEY (PRODUCT_ID) REFERENCES SUPPLY(PRODUCT_ID),
  CONSTRAINT ORDERS_FK3 FOREIGN KEY (SHOP_ID) REFERENCES SHOP(SHOP_ID)
);


CREATE TABLE DELIVERY_AGENCY(
  DELIVERY_AGENCY_ID NUMBER GENERATED BY DEFAULT AS IDENTITY,
  DELIVERY_AGENCY_NAME VARCHAR(255) NOT NULL,
  DELIVERY_AGENCY_PHONE VARCHAR(11) NOT NULL,
  DELIVERY_AGENCY_EMAIL VARCHAR(255) NOT NULL,
  DELIVERY_CHARGE NUMBER DEFAULT 0 NOT NULL,
  DELIVERY_AGENCY_DISTRICT VARCHAR(255) NOT NULL,
  DELIVERY_AGENCY_AREA VARCHAR(255) NOT NULL,
  DELIVERY_AGENCY_ROADNUMBER VARCHAR(255) NOT NULL,
  DELIVERY_AGENCY_LICENSE VARCHAR(255) NOT NULL,
  DELIVERY_AGENCY_STATUS VARCHAR(255) NOT NULL,
  DELIVERY_AGENCY_PASSWORD VARCHAR(255) NOT NULL,
  CONSTRAINT DELIVERY_AGENCY_PK PRIMARY KEY (DELIVERY_AGENCY_ID),
  CONSTRAINT DELIVERY_AGENCY_PHONE_CHECK CHECK (LENGTH(DELIVERY_AGENCY_PHONE) = 11)
);

ALTER TABLE DELIVERY_AGENCY
  ADD ;
